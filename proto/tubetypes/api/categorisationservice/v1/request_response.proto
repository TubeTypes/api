syntax = "proto3";

package tubetypes.api.categorisationservice.v1;

import "tubetypes/api/categorisation/v1/message.proto";

message GetUserStatisticsRequest {
    string user_id = 1;
}

message GetUserStatisticsResponse {
    int32 total_affirmative_votes = 1;
    int32 total_no_category_votes = 2;
}

message VoteFilter {
    // Return only votes that haven't been consolidated.
    optional bool is_pending = 1;
}

message ListVotesOptions {
    VoteFilter filter = 1;
}

message ListAffirmativeVotesRequest {
    int32 page_size = 1;
    string page_token = 2;
    ListVotesOptions options = 3;
}

message ListAffirmativeVotesResponse {
    tubetypes.api.categorisation.v1.AffirmativeVoteList pending_votes = 1;
    string next_page_token = 2;
    int64 total_items = 3;
}

message ListNoCategoryVotesRequest {
    int32 page_size = 1;
    string page_token = 2;
    ListVotesOptions options = 3;
}

message ListNoCategoryVotesResponse {
    tubetypes.api.categorisation.v1.NoCategoryVoteList pending_votes = 1;
    string next_page_token = 2;
    int64 total_items = 3;
}

message GetNextCategorizationRequest {
    string user_id = 1;
}

message GetNextCategorizationResponse {
    string channel_id = 1;
}

message SubmitAffirmativeVoteRequest {
    string user_id = 1;
    string channel_id = 2;
    string category_id = 3;
}

message SubmitAffirmativeVoteResponse {}

message SubmitNoCategoryVoteRequest {
    string user_id = 1;
    string channel_id = 2;
    optional string suggestion = 3;
}

message SubmitNoCategoryVoteResponse {}

message SkipCategorizationRequest {
    string channel_id = 1;
    string user_id = 2;
}

message SkipCategorizationResponse {}

message ApproveAffirmativeVoteRequest {
    string channel_id = 1;
    string category_id = 2;
}

message ApproveAffirmativeVoteResponse {}

message AISuggestedVoteFilter {
    // Filter to votes only for a specific channel ID.
    optional string channel_id = 1;
}

message ListAISuggestedVotesOptions {
    AISuggestedVoteFilter filter = 1;
}

message ListAISuggestedAffirmativeVotesRequest {
    int32 page_size = 1;
    string page_token = 2;
    ListAISuggestedVotesOptions options = 3;
}

message ListAISuggestedAffirmativeVotesResponse {
    string next_page_token = 1;
    repeated tubetypes.api.categorisation.v1.AISuggestedAffirmativeVote votes = 2;
    int64 total_items = 3;
}

message ListAISuggestedNoCategoryVotesRequest {
    int32 page_size = 1;
    string page_token = 2;
    ListAISuggestedVotesOptions options = 3;
}

message ListAISuggestedNoCategoryVotesResponse {
    string next_page_token = 1;
    repeated tubetypes.api.categorisation.v1.AISuggestedNoCategoryVote votes = 2;
    int64 total_items = 3;
}
